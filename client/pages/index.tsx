import type { InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { mdToHtml } from "../lib/remark/convert";
import { readArticleBySlug } from "../core/entities/article/read";
import styles from "../styles/Home.module.css";

type Props = InferGetStaticPropsType<typeof getStaticProps>;

export const getStaticProps = async () => {
  const article = readArticleBySlug("example");
  const parsedContent = await mdToHtml(article.content || "");
  return {
    props: { article, content: parsedContent },
  };
};

const Home: NextPage<Props> = ({ article, content }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <h1>title: {article.title}</h1>
          <p>uid: {article.uid}</p>
          <p>slug: {article.slug}</p>
          <p>description: {article.description}</p>
          <p>thumbnail: {article.thumbnail}</p>
          <p>createdAt: {article.createdAt}</p>
          <p>publishedAt: {article.publishedAt}</p>
          <p>revisedAt: {article.revisedAt}</p>
          {article.unpublishedAt && (
            <p>unpublishedAt: {article.unpublishedAt}</p>
          )}
          <p>tags: {article.tags.join(", ")}</p>
          <p>isDraft: {article.isDraft ? "DRAFT" : "PUBLISHED"}</p>
          <div dangerouslySetInnerHTML={{ __html: content }} />
        </div>
      </main>
    </div>
  );
};

export default Home;
