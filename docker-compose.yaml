version: "3.7"

services:
  db-manager:
    build:
      context: .
      dockerfile: "./resources/db-manager/Dockerfile"
      target: db-dev
    container_name: portfolio-db-manager
    env_file: ./db-manager/.env
    volumes:
      - db-manager:/db
    tty: true

  db-client:
    build:
      context: .
      dockerfile: "./resources/db-client/Dockerfile"
    container_name: portfolio-db-client
    env_file: ./db-client/.env
    volumes:
      - db-manager:/db
    command: sqlite_web /db/portfolio.sqlite3 --password -H 0.0.0.0 -p 5432
    tty: true
    ports:
      - "5432:5432"

  # proto:
  #   build:
  #     context: .
  #     dockerfile: "./resources/protoc/Dockerfile"
  #   container_name: portfolio-proto
  #   volumes:
  #     - ./proto:/proto
  #   tty: true

  # blog-server:
  #   build:
  #     context: .
  #     dockerfile: "./resources/haskell/Dockerfile"
  #     target: blog-server-dev
  #   container_name: portfolio-blog-server
  #   volumes:
  #     - ./haskell/blog-server:/var/www/project
  #     - stack-work:/var/www/project/.stack-work
  #     - db-manager:/var/www/project/db
  #   working_dir: /var/www/project
  #   env_file: ./haskell/blog-server/.env
  #   command: ghcid --command "stack ghci portfolio:exe:portfolio-exe" --test "Main.main"
  #   tty: true
  #   depends_on:
  #     - db-manager

  blog-server:
    build:
      context: .
      dockerfile: "./resources/go/Dockerfile"
      target: go-dev
    container_name: portfolio-blog-server
    volumes:
      - ./go:/var/www/project
      - db-manager:/var/www/project/db
    working_dir: /var/www/project
    env_file: ./go/.env
    command: air
    tty: true
    depends_on:
      - db-manager

  node:
    build:
      context: .
      dockerfile: "./resources/node/Dockerfile"
      target: node-dev
    container_name: portfolio-node
    volumes:
      - ./node:/var/www/project
      - node_modules:/var/www/project/node_modules
      - db-manager:/var/www/project/packages/server/db
    working_dir: /var/www/project
    command: pnpm run dev
    tty: true
    depends_on:
      - db-manager
    ports:
      - "3000:3000"

  nginx:
    image: nginx:1.22-alpine
    container_name: portfolio-nginx
    volumes:
      - ./resources/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./resources/nginx/log:/var/log/nginx
    restart: always
    depends_on:
      - node
    ports:
      - "8800:80"

volumes:
  stack-work:
  db-manager:
  node_modules:
